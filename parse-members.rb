#!/usr/bin/env ruby

$:.unshift "#{File.dirname(__FILE__)}/lib"

require 'rubygems'
require 'mechanize'

require 'configuration'
require 'people_csv_reader'
require 'people_xml_writer'

conf = Configuration.new

people = PeopleCSVReader.read("data/house_members.csv")

# Pick up photos of the current members

# Required to workaround long viewstates generated by .NET (whatever that means)
# See http://code.whytheluckystiff.net/hpricot/ticket/13
Hpricot.buffer_size = 262144

agent = WWW::Mechanize.new
agent.set_proxy(conf.proxy_host, conf.proxy_port)

def parse_person_page(sub_page, people)
  name = Name.last_title_first(sub_page.search("#txtTitle").inner_text.to_s[14..-1])
  content = sub_page.search('div#contentstart')
  
  # Grab image of member
  img_tag = content.search("img").first
  # If image is available
  if img_tag
    relative_image_url = img_tag.attributes['src']
    if relative_image_url != "images/top_btn.gif"
      image_url = sub_page.uri + URI.parse(relative_image_url)
    end
  end

  if image_url
    person = people.find_by_name(name)
    if person
      person.image_url = image_url
    else
      puts "WARNING: Skipping photo for #{name.full_name} because they don't exist in the list of people"
    end
  end
end

# Go through current members of house
agent.get(conf.current_members_url).links[29..-4].each do |link|
  sub_page = agent.click(link)
  parse_person_page(sub_page, people)
end
puts "Any skipped photos after here might be due to former politicians being senators"
# Go through former members of house and senate
agent.get(conf.former_members_url).links[29..-4].each do |link|
  sub_page = agent.click(link)
  parse_person_page(sub_page, people)
end

# Clear out old photos
system("rm -rf pwdata/images/mps/* pwdata/images/mpsL/*")

puts "Writing XML..."
PeopleXMLWriter.write_people(people, 'pwdata/members/people.xml')
PeopleXMLWriter.write_members(people, 'pwdata/members/all-members.xml')
puts "Writing people images..."
PeopleXMLWriter.write_images(people, "pwdata/images/mps", "pwdata/images/mpsL")

# And load up the database
system(conf.web_root + "/twfy/scripts/xml2db.pl --members --all --force")
image_dir = conf.web_root + "/twfy/www/docs/images"
system("rm -rf " + image_dir + "/mps/*.jpg " + image_dir + "/mpsL/*.jpg")
system("cp -R pwdata/images/* " + image_dir)

#people.each {|p| p.display}