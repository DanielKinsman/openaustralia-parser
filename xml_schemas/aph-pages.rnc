start = element hansard {
	element page {
		start-of-transcript | start-of-business | speech | procedural-text | division | adjournment | question | misc
	}+
}

common-metadata =
	element main-committee { "Yes" | "No" } &
	element size { text } &
	element proof { "Yes" } &
	element source { "House" } &
	element database { "House Hansard" } &
	element date { text } &
	element page { xsd:integer }
	
misc =
	element meta {
		element context { "Bills" | "Miscellaneous" | "Start of Transcript" | "Start of Business" } &
		common-metadata &
		
		# Optional metadata
		element stage { "First Reading" | "Second Reading" | "Third Reading" | "Report from Main Committee" }?
	},
	element content {
		hansard-titles,
		div-motionnospeech
	}

question =
	element meta {
		element type { "Question" } &

		element context { "Questions Without Notice" | "Questions in Writing" } &
		common-metadata &
		element responder { text } &
		element questioner { text } &

		# Optional metadata
		element interjector { text }? &
		element question_no { xsd:integer }?
	},
	element content {
		hansard-titles,
		element div {
			attribute class { "questionnumber" },
			text
		}?,
		div-question,
		div-answer
	}

adjournment =
	element meta {
		element type { "Adjournment" } &

		element context { "Adjournment" } &
		common-metadata
	},
	element content {
		element div {
			attribute class { "adjournment" },
			element p { text }
		}
	}

division =
	element meta {
		element type { "Division" } &

		element context { "Bills" | "Miscellaneous" } &
		common-metadata &
		
		# Optional metadata
		element stage { "First Reading" | "Second Reading" | "Third Reading" | "Report from Main Committee" }?
	},
	element content {
		hansard-titles,
		element p { text }+,
		table-division,
		element p { text }+
	}

procedural-text =
	element meta {
		element type { "Procedural text" } &

		element context {
			"Adjournment" | "Notices" | "Matters of Public Importance" | "Miscellaneous" | "Business" | "Bills"
		} &
		common-metadata &

		# Optional metadata
		element interjector { text }? &
		element stage { "First Reading" | "Second Reading" | "Third Reading" | "Report from Main Committee" }?
	},
	element content {
		hansard-titles,
		(div-subspeech | div-quote | p-parablock | p-paraitalic | div-motionnospeech | p | div-motion)+
	}

speech =
	element meta {
		element type { "Speech" } &
		
		element context {
			"Miscellaneous" | "Distinguished Visitors" | "Bills" | "Business" | "Ministerial Arrangements" | "Questions Without Notice" |
			"Questions Without Notice: Additional Answers" | "Auditor-General's Reports" | "Statements by Members" | "Adjournment"
		} &
		common-metadata &
		element speaker { text } &

		# Optional metadata
		element interjector { text }? &
		element stage { "First Reading" | "Second Reading" | "Third Reading" | "Report from Main Committee" }?
	},
	element content {
		hansard-titles,
		speech0
	}

start-of-transcript =
	element meta {
		element type { "Start of Transcript" } &
		element context { "Start of Transcript" } &
		common-metadata
	},
	element content {
		element div {
			attribute class { "titlepage" },
			element div {
				attribute class { "crest" },
				element img {
					attribute src { text },
					attribute alt { text }
				}
			},
			element div { attribute class { "mainheading" }, text },
			element div { attribute class { "date" }, text },
			element div { attribute class { "sessioninfo" }, text }+,
			element div { attribute class { "authority" }, text },
			element div { attribute class { "proof" }, text }
		}
	}

start-of-business =
	element meta {
		element type { "Start of Business" } &
		element context { "Start of Business" } &
		common-metadata
	},
	element content {
		element div {
			attribute class { "businessStart" },
			element div { attribute class { "bsDate" }, text },
			element div {
				attribute class { "separator" },
				element hr { attribute width { "25%" } }
			}?,
			element p {
				element b { text } &
				text
			}
		}
	}

############

table-division =
	element table {
		attribute class { "division" },
		attribute border { "1" },
		attribute width { "100%" },
		element tr {
			element th {
				attribute valign { "top" },
				attribute colspan { xsd:integer },
				(
				element span {
					attribute style {"color: green;" | "color: red;"},
					text
				}* &
				text*
				)
			}+
		}+,
		element tr {
			element td { text }+
		}+
	}

	
div-motionnospeech =
	element div {
		attribute class { "motionnospeech" },
		element span {
			attribute class { "speechname" },
			text
		},
		text,
		element span {
			attribute class { "speechelectorate" },
			text
		},
		text,
		element span {
			attribute class { "speechrole" },
			text
		},
		text,
		element span {
			attribute class { "speechtime" },
			text
		},
		text,
		div-motion,
		p-block*
	}

hansard-titles =
	element div {
		attribute class { "hansardtitlegroup" },
		element div {
			attribute class { "hansardtitle" },
			text
		}+
	},
	element div {
		attribute class { "hansardsubtitlegroup" },
		element div {
			attribute class { "hansardsubtitle" },
			text
		}+
	}?
	
div-motion =
	element div {
		attribute class { "motion" },
		(p | p-parablock),
		html-definition-list?
	}

p-parabold =
	element p {
		attribute class { "parabold" },
		text
	}
	
p-paraitalic =
	element p {
		attribute class { "paraitalic" },
		text
	}

p-parablock =
	element p {
		attribute class { "parablock" },
		marked-text
	}

p-block =
	element p {
		attribute class { "block" },
		marked-text
	}

p =
	element p {
		marked-text
	}

div-quote =
	element div {
		attribute class { "quote" },
		(p-parablock | p | html-definition-list | html-table)+
	}

html-table =
	element table {
		attribute border { xsd:integer },
		element tr {
			element td {
				attribute valign { text },
				attribute style { text }?,
				element p {
					attribute class { "parasmalltableleft" },
					text
				}+
			}+
		}+
	}

html-list =
	element ul {
		element li { text }+
	}
	
html-definition-list =
	element dl {
		(element dt { text },
		element dd {
			html-definition-list* &
			text*
		})+
	}

speech0-b =
	element b {
		element p { text },
		element hr { empty }
	}

div-question =
	element div {
		attribute class { "speech0" },
		element div {
			attribute class { "speechType" },
			"Question"
		},
		p-talker,
		(div-quote | p-parablock | p-paraitalic | div-subspeech)*
	}

div-answer =
	element div {
		attribute class { "speech1" },
		element div {
			attribute class { "speechType" },
			"Answer"
		},
		p-talker,
		(p | div-quote | p-block | p-parablock | div-subspeech | p-paraitalic)+
	}

speech0 =
	element div {
		attribute class { "speech0" },
		element div {
			attribute class { "speechType" },
			"Speech"
		},
		p-talker,
		(div-motion | p | p-parablock | p-paraitalic | p-parabold |
		p-block | div-quote | div-subspeech | html-list | speech0-b )*
	}

marked-text =
	element a {
		attribute href { text }?,
		text
	}* &
	element b { text }* &
	element i { text }* &
	text*

p-talker =
	element p {
		element span {
			attribute class { "talkername" },
			element a {
				attribute href { text }?,
				text
			}
		},
		marked-text?,
		element span {
			attribute class { "talkerelectorate" },
			text
		}?,
		marked-text?,
		element span {
			attribute class { "talkerrole" },
			text
		}?,
		marked-text
	}

div-subspeech =
	element div {
		attribute class { "subspeech0" | "subspeech1" },
		element div { 
			attribute class { "speechType" },
			("Continue" | "Interjection")
		},
		(p-talker | p)
	}
